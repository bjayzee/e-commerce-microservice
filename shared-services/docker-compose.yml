version: "3.9"
services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ecommerce_mongodb
    ports:
      - "27017:27017" # exposed to localhost
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce_network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ecommerce_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce_network

  # Customer Service
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    container_name: customer_service
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      # Inside Docker network
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/customer_db?authSource=admin
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./customer-service:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product_service
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/product_db?authSource=admin
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./product-service:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order_service
    ports:
      - "3003:3003"
    environment:
      PORT: 3003
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/order_db?authSource=admin
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
      CUSTOMER_SERVICE_URL: http://customer-service:3001
      PRODUCT_SERVICE_URL: http://product-service:3002
      PAYMENT_SERVICE_URL: http://payment-service:3004
    depends_on:
      - mongodb
      - rabbitmq
      - customer-service
      - product-service
    volumes:
      - ./order-service:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment_service
    ports:
      - "3004:3004"
    environment:
      PORT: 3004
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/payment_db?authSource=admin
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./payment-service:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Payment Worker Service
  payment-worker:
    build:
      context: ./payment-worker
      dockerfile: Dockerfile
    container_name: payment_worker
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/payment_db?authSource=admin
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
      - payment-service
    volumes:
      - ./payment-worker:/app
      - /app/node_modules
    networks:
      - ecommerce_network

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  ecommerce_network:
    driver: bridge